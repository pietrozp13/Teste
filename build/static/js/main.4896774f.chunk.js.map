{"version":3,"sources":["Containers/Header/Header.js","Components/ItemProduto/styles.js","Components/ItemProduto/ItemProduto.js","Containers/Workspace/Workspace.js","Components/ItemCarrinho/styles.js","Components/ItemCarrinho/ItemCarrinho.js","Containers/Cart/HeaderCart.js","Containers/Cart/Cart.js","Containers/App.js","serviceWorker.js","index.js"],"names":["HeaderContainer","styled","div","RightButtonsContainer","Header","onClickRightButtons","IconButton","onClick","aria-label","style","color","fontSize","ItemContainer","Item","ItemImage","img","Area1","Area2","Area3","TitleText","SkuText","PriceText","ItemProduto","quant","sku","name","imageURL","category","maker","quantityAvailable","price","Paper","elevation","Chip","label","variant","size","src","a","async","fetch","window","endpoint","method","headers","body","JSON","stringify","quantity","rawResponse","status","toast","success","position","autoClose","hideProgressBar","closeOnClick","error","addCart","ItemsContainer","LoaderContainer","Workspace","useState","produtos","setProdutos","useEffect","json","content","fetchProducts","length","map","produto","key","Date","getTime","type","height","width","MarkerText","CategoriaContainer","InfosGrup","SelectGrup","handleRemove","totalItem","setTotalItem","isSelectDisabled","TextField","maxHeight","margin","value","onChange","event","target","inputProps","min","max","disabled","toFixed","TitlePriceContainer","CarrinhoTitileContainer","PriceTextContainer","HeaderCart","display","justifyContent","alignItems","CartContainer","Cart","isOpen","handleClose","items","setItems","fetchCart","warning","Drawer","anchor","open","onClose","totalPrice","forEach","item","product","getTotalPrice","removeFromCart","AppContainer","App","isCartOpen","setIsCartOpen","configure","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4896774f.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { IconButton } from '@material-ui/core';\nimport ShoppingCart from '@material-ui/icons/ShoppingCart';\n\nconst HeaderContainer = styled.div`\n    display: flex;\n    height: 72px;\n    background-color: #3cba92;\n    color: white;\n    align-items: center;\n    justify-content: center;\n    box-shadow: 0px -2px 24px 7px rgba(196,196,196,1);\n`\n\nconst RightButtonsContainer = styled.div`\n    position: absolute;\n    padding-right: 10px;\n    right: 0;\n`\n\nexport default function Header({ onClickRightButtons }) {\n    return (\n        <HeaderContainer >\n            <h1>Nexfar - Teste</h1>\n            <RightButtonsContainer>\n                <IconButton onClick={onClickRightButtons} aria-label=\"Abrir carrinho\">\n                    <ShoppingCart style={{ color: \"white\", fontSize: 28 }}/>\n                </IconButton>\n            </RightButtonsContainer>\n        </HeaderContainer>\n    )\n}\n","import styled from 'styled-components'\n\nexport const ItemContainer = styled.div`\n    display: flex;\n    height: fit-content;\n    width: fit-content;\n    padding: 20px;\n    justify-content: center;\n`\n\nexport const Item = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 350px;\n    width: 400px;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const ItemImage = styled.img`\n    height: 150px;\n    width: 150px;\n    align-items: center;\n    justify-content: center;\n`\nexport const Area1 = styled.div`\n    width: 100%;\n    padding-left: 30px;\n`\nexport const Area2 = styled.div`\n    display: flex;\n    padding-top: 5px;\n`\n\nexport const Area3 = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const TitleText = styled.div`\n    display: flex;\n    font-size: 18px;\n    text-align: center;\n    padding-left: 10px;\n    padding-right: 10px;\n`\n\nexport const SkuText = styled.div`\n    padding-top: 3px;\n    font-size: 12px;\n`\n\nexport const PriceText = styled.div`\n    padding-right: 8px;\n`\n\n","import React from 'react'\nimport { Paper, IconButton, Chip } from '@material-ui/core';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { ItemContainer, Item, ItemImage, Area1, Area2, Area3, TitleText, SkuText, PriceText } from './styles'\n\nexport default function ItemProduto({\n    sku,\n    name,\n    imageURL,\n    category,\n    maker,\n    quantityAvailable,\n    price,\n}) {\n\n    const addCart = async (sku, quant) => {\n        const rawResponse = await fetch(window.endpoint + '/cart/add', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ sku: sku, quantity: quant })\n        });\n        const content = await rawResponse;\n        if (content.status === 200) {\n            toast.success('Item adicionado ao carrinho com sucesso', {\n                position: \"top-right\",\n                autoClose: 3000,\n                hideProgressBar: true,\n                closeOnClick: true,\n            });\n        } else {\n            toast.error('Erro ao adicionado item no carrinho', {\n                position: \"top-right\",\n                autoClose: 3000,\n                hideProgressBar: true,\n                closeOnClick: true,\n            });\n        }\n    }\n\n    function getQuantidadeTag (quant) {\n        if (quant === 0) return <Chip label={\"Sem Estoque\"} variant=\"outlined\" style={{ color: \"red\", }} size=\"small\" />\n        if (quant < 10) return <Chip label={\"Últimas Unidades\"} variant=\"outlined\" style={{ color: \"#d18b00\", }} size=\"small\" />\n    }\n\n    return (\n        <ItemContainer>\n            <Paper elevation={3}>\n                <Item>\n                    <Area1>\n                        <Chip label={category} variant=\"outlined\" style={{ color: \"#3cba92\", }} size=\"small\" />\n                    </Area1>\n                    <ItemImage src={imageURL}/>\n                    <div>{maker}</div>\n                    <TitleText><b>{name}</b></TitleText>\n                    <SkuText>{sku}</SkuText>\n                    <Area2>\n                        {getQuantidadeTag(quantityAvailable)}\n                    </Area2>\n                    <Area3>\n                        <PriceText>\n                            <b>Preço: R$ {price}</b>\n                        </PriceText>\n                        {quantityAvailable !== 0 &&    \n                            <IconButton onClick={()=> addCart(sku, 1)} aria-label=\"Adicionar item ao carrinho\">\n                                <AddShoppingCartIcon style={{ color: \"#3cba92\", fontSize: 24 }} />\n                            </IconButton>\n                        }\n                    </Area3>\n                </Item>\n            </Paper>\n        </ItemContainer>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport ItemProduto from '../../Components/ItemProduto/ItemProduto'\n\nconst ItemsContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n`\n\nexport const LoaderContainer = styled.div`\n    padding-top: 100px;\n`\n\nexport default function Workspace() {\n    const [produtos, setProdutos] = useState([])\n\n    useEffect(() => {\n        fetchProducts()\n    }, [])\n\n    async function fetchProducts () {\n        const rawResponse = await fetch(window.endpoint + '/product');\n        const content = await rawResponse.json();\n        if (rawResponse.status !== 200) {\n            toast.error('Erro ao carregar produtos', {\n                position: \"top-right\",\n                autoClose: false,\n                hideProgressBar: true,\n                closeOnClick: true,\n            });\n        }\n        setProdutos(await content)\n    }\n\n    return (\n        <ItemsContainer>\n            {produtos.length ? (\n                produtos.map((produto) => {\n                    return (\n                            <ItemProduto \n                                key={produto.sku + new Date().getTime()}\n                                sku={produto.sku}\n                                name={produto.name}\n                                imageURL={produto.imageURL}\n                                category={produto.category}\n                                maker={produto.maker}\n                                quantityAvailable={produto.quantityAvailable}\n                                price={produto.price}\n                            />\n                        );\n                })\n            ) : (\n                <LoaderContainer>\n                    <Loader\n                        type=\"TailSpin\"\n                        color=\"#3cba92\"\n                        height={120}\n                        width={120}\n                    />\n                </LoaderContainer>\n            )}\n        </ItemsContainer>\n    )\n}\n","import styled from 'styled-components'\n\nexport const ItemContainer = styled.div`\n    display: flex;\n    height: fit-content;\n    padding-top: 10px;\n    padding-bottom: 10px;\n`\n\nexport const Item = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    height: fit-content;\n    padding: 15px;\n`\n\nexport const ItemImage = styled.img`\n    height: 90px;\n    width: 90px;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const TitleText = styled.div`\n    font-size: 18px;\n    max-width: 200px;\n`\n\nexport const SkuText = styled.div`\n    padding-top: 5px;\n    font-size: 12px;\n`\n\nexport const MarkerText = styled.div`\n    padding-bottom: 5px;\n    font-size: 14px;\n`\n\nexport const CategoriaContainer = styled.div`\n`\n\nexport const InfosGrup = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 170px;\n`\nexport const SelectGrup = styled.div`\n    display: flex;\n    width: 120px;\n    justify-content: space-between;\n`\n","import React, { useState } from 'react'\nimport { Paper, IconButton, Chip, TextField } from '@material-ui/core';\nimport DeleteForever from '@material-ui/icons/DeleteForever';\nimport Check from '@material-ui/icons/Check';\n\nimport { ItemContainer, Item, ItemImage, SkuText, TitleText, CategoriaContainer, MarkerText, InfosGrup, SelectGrup } from './styles'\n\n\nexport default function ItemProduto({\n    sku,\n    name,\n    imageURL,\n    category,\n    maker,\n    quantityAvailable,\n    quantity,\n    price,\n    handleRemove,\n    addCart\n}) {\n    const [totalItem, setTotalItem] = useState(quantity)\n\n    const isSelectDisabled = () => {\n        return quantity === totalItem\n    }\n\n    return (\n        <ItemContainer>\n            <Paper elevation={3} style={{ width: \"100%\", height: \"100%\" }}>\n                <Item>\n                    <ItemImage src={imageURL}/>\n                    <div>\n                        <MarkerText>{maker}</MarkerText>\n                        <TitleText><b>{name}</b></TitleText>\n                        <SkuText>{sku}</SkuText>\n                    </div>\n                    <CategoriaContainer>\n                        <Chip label={category} variant=\"outlined\" style={{ color: \"#3cba92\", }} size=\"small\" />\n                    </CategoriaContainer>\n                    <SelectGrup>\n                        <TextField\n                            style={{ maxHeight: \"20px\", fontSize: \"10px\" }}\n                            type=\"number\"\n                            size=\"small\"\n                            margin=\"dense\"\n                            variant=\"outlined\"\n                            value={totalItem}\n                            onChange={(event)=>{\n                                setTotalItem(event.target.value)\n                            }}\n                            inputProps={{\n                                min: 0,\n                                max: quantityAvailable\n                            }} \n                        />\n                        <IconButton\n                            disabled={isSelectDisabled()}\n                            onClick={() => addCart(sku, totalItem)}\n                            aria-label=\"Remover item do carrinho\"\n                        >\n                            <Check style={{ color: isSelectDisabled() ? \"gray\" : \"#3cba92\", fontSize: 20 }}/>\n                        </IconButton>\n                    </SelectGrup>\n                    <InfosGrup>\n                        <b>Preço: R$ {price}</b>\n                        <b>Total: R$ {(price * totalItem).toFixed(2)}</b>\n                    </InfosGrup>\n                    <IconButton onClick={handleRemove} aria-label=\"Remover item do carrinho\">\n                        <DeleteForever style={{ color: \"red\", fontSize: 24 }}/>\n                    </IconButton>\n                </Item>\n            </Paper>\n        </ItemContainer>\n    )\n}\n","import React from 'react'\nimport { Paper } from '@material-ui/core';\nimport styled from 'styled-components'\n\nexport const TitlePriceContainer = styled.div`\n    display: flex;\n    height: 60px;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const CarrinhoTitileContainer = styled.div`\n    font-size: 30px;\n    padding-left: 20px;\n    color: #525252;\n`\n\nexport const PriceTextContainer = styled.div`\n    font-size: 26px;\n    padding-right: 20px;\n    color: #6e6e6e;\n`\n\nexport const HeaderCart = ({ price }) => {\n    return (\n        <TitlePriceContainer>\n            <Paper elevation={5} style={{ display: \"flex\", height: \"100%\", width: \"100%\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n                <CarrinhoTitileContainer>Carrinho</CarrinhoTitileContainer>\n                <PriceTextContainer><b>Total: R$ {price}</b></PriceTextContainer>\n            </Paper>\n        </TitlePriceContainer>\n    )\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { Drawer } from '@material-ui/core';\nimport ItemCarrinho from '../../Components/ItemCarrinho/ItemCarrinho'\nimport { HeaderCart } from './HeaderCart'\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport Loader from 'react-loader-spinner'\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport styled from 'styled-components'\n\nexport const CartContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const ItemContainer = styled.div`\n    display: flex;\n    width: 70vw;\n    padding-right: 20px;\n    padding-left: 20px;\n    padding-bottom: 20px;\n    justify-content: center;\n    flex-direction: column;\n    overflow-x: hidden;\n`\n\nexport const LoaderContainer = styled.div`\n    display: flex;\n    width: 70vw;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n`\n\n\nexport default function Cart({ isOpen, handleClose }) {\n    const [items, setItems] = useState([])\n\n    useEffect(() => {\n        fetchCart()\n    }, [])\n\n    async function fetchCart () {\n        const rawResponse = await fetch(window.endpoint + '/cart');\n        const content = await rawResponse.json();\n        if (content.items.length === 0) {\n            toast.warning('Sem itens no carrinho', {\n                position: \"top-right\",\n                autoClose: 3000,\n                hideProgressBar: true,\n                closeOnClick: true,\n            });\n            handleClose()\n        }\n        setItems(await content.items)\n    }\n\n    async function removeFromCart (sku) {\n        const rawResponse = await fetch(window.endpoint + '/cart/remove/' + sku, {\n            method: 'DELETE',\n        });\n        const content = await rawResponse;\n        if (content.status === 200) {\n            toast.success('Item adicionado ao carrinho com sucesso', {\n                position: \"top-right\",\n                autoClose: 3000,\n                hideProgressBar: true,\n                closeOnClick: true,\n            });\n        } else {\n            toast.error('Erro ao adicionado item no carrinho', {\n                position: \"top-right\",\n                autoClose: 3000,\n                hideProgressBar: true,\n                closeOnClick: true,\n            });\n        }\n        fetchCart()\n    }\n\n    const addCart = async (sku, quant) => {\n        const rawResponse = await fetch(window.endpoint + '/cart/add', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ sku: sku, quantity: quant })\n        });\n        await rawResponse;\n        fetchCart()\n    }\n\n    const getTotalPrice = () => {\n        let totalPrice = 0\n        items.forEach((item)=> {\n            totalPrice += item.product.price * item.quantity\n        })\n        return totalPrice\n    }\n    return (\n        <Drawer anchor=\"right\" open={isOpen} onClose={handleClose}>\n            {items.length ? (\n                <CartContainer>\n                    <HeaderCart price={getTotalPrice().toFixed(2)} />\n                    <ItemContainer>\n                        {items && items.map(({ product, quantity })=> {\n                            return(\n                                <ItemCarrinho\n                                    key={product.sku + new Date().getTime()}\n                                    sku={product.sku}\n                                    name={product.name}\n                                    imageURL={product.imageURL}\n                                    category={product.category}\n                                    maker={product.maker}\n                                    quantityAvailable={product.quantityAvailable}\n                                    price={product.price}\n                                    quantity={quantity}\n                                    handleRemove={() => removeFromCart(product.sku)}\n                                    addCart={addCart}\n                                />\n                            )\n                        })}\n                    </ItemContainer>\n                </CartContainer>\n            ) : (\n                <LoaderContainer>\n                    <Loader\n                        type=\"TailSpin\"\n                        color=\"#3cba92\"\n                        height={120}\n                        width={120}\n                    />\n                </LoaderContainer>\n            )}\n        </Drawer>\n    )\n}\n","import React, { useState } from 'react'\nimport Header from './Header/Header'\nimport Workspace from './Workspace/Workspace'\nimport Cart from './Cart/Cart'\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport styled from 'styled-components'\n\nconst AppContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nfunction App() {\n  const [isCartOpen, setIsCartOpen] = useState(false)\n  \n  // Config toaster global\n  toast.configure()\n\n  return (\n    <AppContainer>\n      <Header onClickRightButtons={() => setIsCartOpen(true)}/>\n      <Workspace />\n      {isCartOpen && <Cart isOpen={isCartOpen} handleClose={() => setIsCartOpen(false)}/>}\n    </AppContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}